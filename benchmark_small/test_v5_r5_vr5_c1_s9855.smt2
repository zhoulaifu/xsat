(set-logic QF_FP)
(set-info :smt-lib-version 2.0)
(set-info :category "crafted")
(set-info :source |Alberto Griggio <griggio@fbk.eu>. These benchmarks were used for the evaluation in the following paper: L. Haller, A. Griggio, M. Brain, D. Kroening: Deciding floating-point logic with systematic abstraction. FMCAD 2012. Real-numbered literals have been automatically translated by MathSAT|)
(set-info :status unknown)
;; MathSAT API call trace
;; generated on 05/20/15 17:24:56

(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(define-fun _t_10 () (_ FloatingPoint 8 24) (fp #b0 #b10000001 #b01000000000000000000000))
(define-fun _t_12 () (_ FloatingPoint 8 24) (fp #b1 #b10000001 #b01000000000000000000000))
(define-fun _t_13 () (_ FloatingPoint 8 24) x0)
(define-fun _t_14 () Bool (fp.leq _t_12 _t_13))
(define-fun _t_15 () Bool (fp.leq _t_13 _t_10))
(define-fun _t_16 () Bool (and _t_14 _t_15))
(assert _t_16)
(define-fun _t_17 () (_ FloatingPoint 8 24) x1)
(define-fun _t_18 () Bool (fp.leq _t_12 _t_17))
(define-fun _t_19 () Bool (fp.leq _t_17 _t_10))
(define-fun _t_20 () Bool (and _t_18 _t_19))
(assert _t_20)
(define-fun _t_21 () (_ FloatingPoint 8 24) x2)
(define-fun _t_22 () Bool (fp.leq _t_12 _t_21))
(define-fun _t_23 () Bool (fp.leq _t_21 _t_10))
(define-fun _t_24 () Bool (and _t_22 _t_23))
(assert _t_24)
(define-fun _t_25 () (_ FloatingPoint 8 24) x3)
(define-fun _t_26 () Bool (fp.leq _t_12 _t_25))
(define-fun _t_27 () Bool (fp.leq _t_25 _t_10))
(define-fun _t_28 () Bool (and _t_26 _t_27))
(assert _t_28)
(define-fun _t_29 () (_ FloatingPoint 8 24) x4)
(define-fun _t_30 () Bool (fp.leq _t_12 _t_29))
(define-fun _t_31 () Bool (fp.leq _t_29 _t_10))
(define-fun _t_32 () Bool (and _t_30 _t_31))
(assert _t_32)
(define-fun _t_3 () RoundingMode RNE)
(define-fun _t_34 () (_ FloatingPoint 8 24) (fp #b0 #b00000000 #b00000000000000000000000))
(define-fun _t_37 () (_ FloatingPoint 8 24) (fp #b1 #b01110111 #b00000110001001001101111))
(define-fun _t_40 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00010111000010100011110))
(define-fun _t_41 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_40))
(define-fun _t_42 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_41))
(define-fun _t_45 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b10110011001100110011001))
(define-fun _t_46 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_45))
(define-fun _t_47 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_42 _t_46))
(define-fun _t_49 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b10011000100100110111001))
(define-fun _t_50 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_49))
(define-fun _t_51 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_47 _t_50))
(define-fun _t_53 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b10110101001111110111110))
(define-fun _t_54 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_53))
(define-fun _t_55 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_51 _t_54))
(define-fun _t_57 () (_ FloatingPoint 8 24) (fp #b0 #b01111011 #b00101011000000100000110))
(define-fun _t_58 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_57))
(define-fun _t_59 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_55 _t_58))
(define-fun _t_60 () Bool (fp.leq _t_59 _t_37))
(assert _t_60)
(define-fun _t_62 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01110000101000111101100))
(define-fun _t_64 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01101110000101000111100))
(define-fun _t_65 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_64))
(define-fun _t_66 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_65))
(define-fun _t_69 () (_ FloatingPoint 8 24) (fp #b1 #b01111100 #b10010001011010000111000))
(define-fun _t_70 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_69))
(define-fun _t_71 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_66 _t_70))
(define-fun _t_74 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b11100101011000000100001))
(define-fun _t_75 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_74))
(define-fun _t_76 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_71 _t_75))
(define-fun _t_78 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b11100111011011001000110))
(define-fun _t_79 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_78))
(define-fun _t_80 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_76 _t_79))
(define-fun _t_83 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b01001011110001101010011))
(define-fun _t_84 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_83))
(define-fun _t_85 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_80 _t_84))
(define-fun _t_86 () Bool (fp.leq _t_62 _t_85))
(assert _t_86)
(define-fun _t_89 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b11011010000111001010110))
(define-fun _t_92 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b01110110110010001011001))
(define-fun _t_93 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_92))
(define-fun _t_94 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_93))
(define-fun _t_96 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b00000100000110001001010))
(define-fun _t_97 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_96))
(define-fun _t_98 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_94 _t_97))
(define-fun _t_101 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b00101101000011100101010))
(define-fun _t_102 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_101))
(define-fun _t_103 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_98 _t_102))
(define-fun _t_106 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00010100111111011111001))
(define-fun _t_107 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_106))
(define-fun _t_108 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_103 _t_107))
(define-fun _t_110 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b10111011111001110110110))
(define-fun _t_111 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_110))
(define-fun _t_112 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_108 _t_111))
(define-fun _t_113 () Bool (fp.leq _t_89 _t_112))
(assert _t_113)
(define-fun _t_115 () (_ FloatingPoint 8 24) (fp #b0 #b01111011 #b10110110010001011010000))
(define-fun _t_117 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01110011101101100100011))
(define-fun _t_118 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_117))
(define-fun _t_119 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_118))
(define-fun _t_122 () (_ FloatingPoint 8 24) (fp #b1 #b01110110 #b00000110001001001101111))
(define-fun _t_123 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_122))
(define-fun _t_124 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_119 _t_123))
(define-fun _t_126 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b11110001101010011111101))
(define-fun _t_127 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_126))
(define-fun _t_128 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_124 _t_127))
(define-fun _t_131 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b11011100001010001111011))
(define-fun _t_132 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_131))
(define-fun _t_133 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_128 _t_132))
(define-fun _t_135 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b00010111100011010101000))
(define-fun _t_136 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_135))
(define-fun _t_137 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_133 _t_136))
(define-fun _t_138 () Bool (fp.leq _t_137 _t_115))
(assert _t_138)
(define-fun _t_140 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b11000001100010010011100))
(define-fun _t_143 () (_ FloatingPoint 8 24) (fp #b1 #b01111100 #b00000110001001001101111))
(define-fun _t_144 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_143))
(define-fun _t_145 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_144))
(define-fun _t_148 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b10000110001001001101111))
(define-fun _t_149 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_148))
(define-fun _t_150 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_145 _t_149))
(define-fun _t_153 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00111111011111001110110))
(define-fun _t_154 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_153))
(define-fun _t_155 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_150 _t_154))
(define-fun _t_158 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b10011100101011000000100))
(define-fun _t_159 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_158))
(define-fun _t_160 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_155 _t_159))
(define-fun _t_163 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b11101011100001010001111))
(define-fun _t_164 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_163))
(define-fun _t_165 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_160 _t_164))
(define-fun _t_166 () Bool (fp.leq _t_165 _t_140))
(assert _t_166)
(check-sat)
