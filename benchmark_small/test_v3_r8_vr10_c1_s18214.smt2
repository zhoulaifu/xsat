(set-logic QF_FP)
(set-info :smt-lib-version 2.0)
(set-info :category "crafted")
(set-info :source |Alberto Griggio <griggio@fbk.eu>. These benchmarks were used for the evaluation in the following paper: L. Haller, A. Griggio, M. Brain, D. Kroening: Deciding floating-point logic with systematic abstraction. FMCAD 2012. Real-numbered literals have been automatically translated by MathSAT|)
(set-info :status unknown)
;; MathSAT API call trace
;; generated on 05/20/15 17:24:55

(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(define-fun _t_10 () (_ FloatingPoint 8 24) (fp #b0 #b10000010 #b01000000000000000000000))
(define-fun _t_12 () (_ FloatingPoint 8 24) (fp #b1 #b10000010 #b01000000000000000000000))
(define-fun _t_13 () (_ FloatingPoint 8 24) x0)
(define-fun _t_14 () Bool (fp.leq _t_12 _t_13))
(define-fun _t_15 () Bool (fp.leq _t_13 _t_10))
(define-fun _t_16 () Bool (and _t_14 _t_15))
(assert _t_16)
(define-fun _t_17 () (_ FloatingPoint 8 24) x1)
(define-fun _t_18 () Bool (fp.leq _t_12 _t_17))
(define-fun _t_19 () Bool (fp.leq _t_17 _t_10))
(define-fun _t_20 () Bool (and _t_18 _t_19))
(assert _t_20)
(define-fun _t_21 () (_ FloatingPoint 8 24) x2)
(define-fun _t_22 () Bool (fp.leq _t_12 _t_21))
(define-fun _t_23 () Bool (fp.leq _t_21 _t_10))
(define-fun _t_24 () Bool (and _t_22 _t_23))
(assert _t_24)
(define-fun _t_3 () RoundingMode RNE)
(define-fun _t_26 () (_ FloatingPoint 8 24) (fp #b0 #b00000000 #b00000000000000000000000))
(define-fun _t_28 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b00101000111101011100001))
(define-fun _t_30 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b11010100111111011111001))
(define-fun _t_31 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_30))
(define-fun _t_32 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_26 _t_31))
(define-fun _t_34 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b11101011100001010001111))
(define-fun _t_35 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_34))
(define-fun _t_36 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_32 _t_35))
(define-fun _t_38 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b01101000011100101011000))
(define-fun _t_39 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_38))
(define-fun _t_40 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_36 _t_39))
(define-fun _t_41 () Bool (fp.leq _t_28 _t_40))
(assert _t_41)
(define-fun _t_43 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b01100110011001100110010))
(define-fun _t_45 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00100000110001001001110))
(define-fun _t_46 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_45))
(define-fun _t_47 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_26 _t_46))
(define-fun _t_50 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b01100011010100111111100))
(define-fun _t_51 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_50))
(define-fun _t_52 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_47 _t_51))
(define-fun _t_55 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b10100110111010010111100))
(define-fun _t_56 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_55))
(define-fun _t_57 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_52 _t_56))
(define-fun _t_58 () Bool (fp.leq _t_57 _t_43))
(assert _t_58)
(define-fun _t_60 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00011000100100110111001))
(define-fun _t_63 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b01000110001001001101110))
(define-fun _t_64 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_63))
(define-fun _t_65 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_26 _t_64))
(define-fun _t_67 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b10010001011010000111001))
(define-fun _t_68 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_67))
(define-fun _t_69 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_65 _t_68))
(define-fun _t_72 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b11101111100111011011001))
(define-fun _t_73 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_72))
(define-fun _t_74 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_69 _t_73))
(define-fun _t_75 () Bool (fp.leq _t_60 _t_74))
(assert _t_75)
(define-fun _t_78 () (_ FloatingPoint 8 24) (fp #b1 #b01111011 #b10010001011010000111000))
(define-fun _t_80 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b11000000100000110001001))
(define-fun _t_81 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_80))
(define-fun _t_82 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_26 _t_81))
(define-fun _t_84 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b11000010100011110101101))
(define-fun _t_85 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_84))
(define-fun _t_86 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_82 _t_85))
(define-fun _t_89 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b11000010000011000100100))
(define-fun _t_90 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_89))
(define-fun _t_91 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_86 _t_90))
(define-fun _t_92 () Bool (fp.leq _t_91 _t_78))
(assert _t_92)
(define-fun _t_95 () (_ FloatingPoint 8 24) (fp #b1 #b01111010 #b01000111101011100001001))
(define-fun _t_97 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b10010000011000100100110))
(define-fun _t_98 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_97))
(define-fun _t_99 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_26 _t_98))
(define-fun _t_101 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b11100000010000011000100))
(define-fun _t_102 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_101))
(define-fun _t_103 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_99 _t_102))
(define-fun _t_105 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b01101010011111101111100))
(define-fun _t_106 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_105))
(define-fun _t_107 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_103 _t_106))
(define-fun _t_108 () Bool (fp.leq _t_95 _t_107))
(assert _t_108)
(define-fun _t_110 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b11100001010001111010110))
(define-fun _t_112 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b00001100010010011011100))
(define-fun _t_113 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_112))
(define-fun _t_114 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_26 _t_113))
(define-fun _t_116 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01011001100110011001100))
(define-fun _t_117 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_116))
(define-fun _t_118 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_114 _t_117))
(define-fun _t_121 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00111101111100111011011))
(define-fun _t_122 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_121))
(define-fun _t_123 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_118 _t_122))
(define-fun _t_124 () Bool (fp.leq _t_110 _t_123))
(assert _t_124)
(define-fun _t_127 () (_ FloatingPoint 8 24) (fp #b1 #b01111001 #b01101000011100101010111))
(define-fun _t_130 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b10000001000001100010010))
(define-fun _t_131 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_130))
(define-fun _t_132 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_26 _t_131))
(define-fun _t_135 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00001001001101110100110))
(define-fun _t_136 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_135))
(define-fun _t_137 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_132 _t_136))
(define-fun _t_139 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b00110001001001101110101))
(define-fun _t_140 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_139))
(define-fun _t_141 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_137 _t_140))
(define-fun _t_142 () Bool (fp.leq _t_141 _t_127))
(assert _t_142)
(define-fun _t_145 () (_ FloatingPoint 8 24) (fp #b1 #b01111010 #b10010001011010000111000))
(define-fun _t_148 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b01010110000001000001100))
(define-fun _t_149 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_148))
(define-fun _t_150 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_26 _t_149))
(define-fun _t_152 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b00001110010101100000010))
(define-fun _t_153 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_152))
(define-fun _t_154 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_150 _t_153))
(define-fun _t_157 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00011010100111111011110))
(define-fun _t_158 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_157))
(define-fun _t_159 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_154 _t_158))
(define-fun _t_160 () Bool (fp.leq _t_159 _t_145))
(assert _t_160)
(check-sat)
