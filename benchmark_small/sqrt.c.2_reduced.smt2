(set-logic QF_FP)
(set-info :smt-lib-version 2.0)
(set-info :category "crafted")
(set-info :source |Alberto Griggio <griggio@fbk.eu>. These benchmarks were used for the evaluation in the following paper: L. Haller, A. Griggio, M. Brain, D. Kroening: Deciding floating-point logic with systematic abstraction. FMCAD 2012. Real-numbered literals have been automatically translated by MathSAT|)
(set-info :status unknown)
;; MathSAT API call trace
;; generated on 05/20/15 17:24:54

(declare-fun b39 () (_ FloatingPoint 8 24))
(declare-fun b46 () (_ FloatingPoint 8 24))
(declare-fun b44 () (_ FloatingPoint 11 53))
(declare-fun b55 () (_ FloatingPoint 11 53))
(declare-fun b106 () (_ FloatingPoint 11 53))
(declare-fun b189 () (_ FloatingPoint 8 24))
(declare-fun b116 () (_ FloatingPoint 8 24))
(declare-fun b174 () (_ FloatingPoint 8 24))
(declare-fun b179 () (_ FloatingPoint 8 24))
(declare-fun b41 () (_ FloatingPoint 8 24))
(define-fun _t_3 () RoundingMode RNE)
(define-fun _t_9 () (_ FloatingPoint 8 24) b39)
(define-fun _t_10 () (_ FloatingPoint 8 24) b41)
(define-fun _t_11 () (_ FloatingPoint 8 24) (fp.div _t_3 _t_9 _t_10))
(define-fun _t_12 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) _t_3 _t_11))
(define-fun _t_13 () (_ FloatingPoint 11 53) b55)
(define-fun _t_14 () (_ FloatingPoint 11 53) (fp.mul _t_3 _t_12 _t_13))
(define-fun _t_15 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_11 _t_11))
(define-fun _t_16 () (_ FloatingPoint 8 24) (fp.neg _t_15))
(define-fun _t_17 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_9 _t_16))
(define-fun _t_18 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) _t_3 _t_17))
(define-fun _t_19 () (_ FloatingPoint 11 53) (fp.div _t_3 _t_18 _t_14))
(define-fun _t_20 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) _t_3 _t_19))
(define-fun _t_21 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_11 _t_20))
(define-fun _t_22 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_21))
(define-fun _t_23 () (_ FloatingPoint 8 24) (fp.neg _t_22))
(define-fun _t_24 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_9 _t_23))
(define-fun _t_25 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) _t_3 _t_24))
(define-fun _t_26 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) _t_3 _t_25))
(define-fun _t_27 () (_ FloatingPoint 8 24) b189)
(define-fun _t_28 () Bool (= _t_26 _t_27))
(define-fun _t_29 () Bool (not _t_28))
(define-fun _t_30 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) _t_3 _t_21))
(define-fun _t_31 () (_ FloatingPoint 11 53) (fp.mul _t_3 _t_13 _t_30))
(define-fun _t_32 () (_ FloatingPoint 11 53) (fp.div _t_3 _t_25 _t_31))
(define-fun _t_33 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) _t_3 _t_32))
(define-fun _t_34 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_21 _t_33))
(define-fun _t_35 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_34 _t_34))
(define-fun _t_36 () (_ FloatingPoint 8 24) (fp.neg _t_35))
(define-fun _t_37 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_9 _t_36))
(define-fun _t_38 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) _t_3 _t_37))
(define-fun _t_39 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) _t_3 _t_38))
(define-fun _t_40 () (_ FloatingPoint 8 24) b179)
(define-fun _t_41 () Bool (= _t_39 _t_40))
(define-fun _t_42 () Bool (not _t_41))
(define-fun _t_43 () (_ FloatingPoint 11 53) b106)
(define-fun _t_44 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) _t_3 _t_43))
(define-fun _t_45 () (_ FloatingPoint 8 24) b174)
(define-fun _t_46 () Bool (= _t_44 _t_45))
(define-fun _t_47 () Bool (not _t_46))
(define-fun _t_48 () (_ FloatingPoint 8 24) b46)
(define-fun _t_49 () Bool (fp.eq _t_9 _t_48))
(define-fun _t_50 () Bool (not _t_49))
(define-fun _t_51 () Bool (fp.leq _t_48 _t_9))
(define-fun _t_52 () Bool (and _t_50 _t_51))
(define-fun _t_53 () Bool (fp.leq _t_48 _t_44))
(define-fun _t_54 () Bool (not _t_53))
(define-fun _t_55 () Bool (and _t_52 _t_54))
(define-fun _t_56 () (_ FloatingPoint 8 24) (fp.neg _t_44))
(define-fun _t_57 () Bool (= _t_45 _t_56))
(define-fun _t_58 () Bool (and _t_55 _t_57))
(define-fun _t_59 () Bool (and _t_47 _t_58))
(define-fun _t_60 () Bool (fp.leq _t_48 _t_39))
(define-fun _t_61 () Bool (not _t_60))
(define-fun _t_62 () Bool (and _t_59 _t_61))
(define-fun _t_63 () (_ FloatingPoint 8 24) (fp.neg _t_39))
(define-fun _t_64 () Bool (= _t_40 _t_63))
(define-fun _t_65 () Bool (and _t_62 _t_64))
(define-fun _t_66 () Bool (and _t_42 _t_65))
(define-fun _t_67 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) _t_3 _t_27))
(define-fun _t_68 () (_ FloatingPoint 11 53) b44)
(define-fun _t_69 () Bool (fp.leq _t_67 _t_68))
(define-fun _t_70 () Bool (not _t_69))
(define-fun _t_71 () Bool (and _t_66 _t_70))
(define-fun _t_72 () Bool (fp.leq _t_48 _t_26))
(define-fun _t_73 () Bool (not _t_72))
(define-fun _t_74 () Bool (and _t_71 _t_73))
(define-fun _t_75 () (_ FloatingPoint 8 24) (fp.neg _t_26))
(define-fun _t_76 () Bool (= _t_27 _t_75))
(define-fun _t_77 () Bool (and _t_74 _t_76))
(define-fun _t_78 () (_ FloatingPoint 8 24) b116)
(define-fun _t_79 () Bool (fp.leq _t_45 _t_78))
(define-fun _t_80 () Bool (not _t_79))
(define-fun _t_81 () Bool (and _t_77 _t_80))
(define-fun _t_82 () Bool (and _t_29 _t_81))
(assert _t_82)
(check-sat)
