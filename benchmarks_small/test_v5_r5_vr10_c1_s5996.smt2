(set-logic QF_FP)
(set-info :smt-lib-version 2.0)
(set-info :category "crafted")
(set-info :source |Alberto Griggio <griggio@fbk.eu>. These benchmarks were used for the evaluation in the following paper: L. Haller, A. Griggio, M. Brain, D. Kroening: Deciding floating-point logic with systematic abstraction. FMCAD 2012. Real-numbered literals have been automatically translated by MathSAT|)
(set-info :status unknown)
;; MathSAT API call trace
;; generated on 05/20/15 17:24:56

(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(define-fun _t_10 () (_ FloatingPoint 8 24) (fp #b0 #b10000010 #b01000000000000000000000))
(define-fun _t_12 () (_ FloatingPoint 8 24) (fp #b1 #b10000010 #b01000000000000000000000))
(define-fun _t_13 () (_ FloatingPoint 8 24) x0)
(define-fun _t_14 () Bool (fp.leq _t_12 _t_13))
(define-fun _t_15 () Bool (fp.leq _t_13 _t_10))
(define-fun _t_16 () Bool (and _t_14 _t_15))
(assert _t_16)
(define-fun _t_17 () (_ FloatingPoint 8 24) x1)
(define-fun _t_18 () Bool (fp.leq _t_12 _t_17))
(define-fun _t_19 () Bool (fp.leq _t_17 _t_10))
(define-fun _t_20 () Bool (and _t_18 _t_19))
(assert _t_20)
(define-fun _t_21 () (_ FloatingPoint 8 24) x2)
(define-fun _t_22 () Bool (fp.leq _t_12 _t_21))
(define-fun _t_23 () Bool (fp.leq _t_21 _t_10))
(define-fun _t_24 () Bool (and _t_22 _t_23))
(assert _t_24)
(define-fun _t_25 () (_ FloatingPoint 8 24) x3)
(define-fun _t_26 () Bool (fp.leq _t_12 _t_25))
(define-fun _t_27 () Bool (fp.leq _t_25 _t_10))
(define-fun _t_28 () Bool (and _t_26 _t_27))
(assert _t_28)
(define-fun _t_29 () (_ FloatingPoint 8 24) x4)
(define-fun _t_30 () Bool (fp.leq _t_12 _t_29))
(define-fun _t_31 () Bool (fp.leq _t_29 _t_10))
(define-fun _t_32 () Bool (and _t_30 _t_31))
(assert _t_32)
(define-fun _t_3 () RoundingMode RNE)
(define-fun _t_34 () (_ FloatingPoint 8 24) (fp #b0 #b00000000 #b00000000000000000000000))
(define-fun _t_36 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01111010111000010100100))
(define-fun _t_38 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b11000010100011110101101))
(define-fun _t_39 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_38))
(define-fun _t_40 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_39))
(define-fun _t_43 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00110111010010111100011))
(define-fun _t_44 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_43))
(define-fun _t_45 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_40 _t_44))
(define-fun _t_48 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b11010001011010000111001))
(define-fun _t_49 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_48))
(define-fun _t_50 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_45 _t_49))
(define-fun _t_53 () (_ FloatingPoint 8 24) (fp #b1 #b01111010 #b11110011101101100100011))
(define-fun _t_54 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_53))
(define-fun _t_55 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_50 _t_54))
(define-fun _t_58 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b10010110100001110010110))
(define-fun _t_59 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_58))
(define-fun _t_60 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_55 _t_59))
(define-fun _t_61 () Bool (fp.leq _t_36 _t_60))
(assert _t_61)
(define-fun _t_64 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00110001001001101110100))
(define-fun _t_66 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00001001001101110100110))
(define-fun _t_67 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_66))
(define-fun _t_68 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_67))
(define-fun _t_71 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b00001011010000111001010))
(define-fun _t_72 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_71))
(define-fun _t_73 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_68 _t_72))
(define-fun _t_76 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00000110101001111111000))
(define-fun _t_77 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_76))
(define-fun _t_78 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_73 _t_77))
(define-fun _t_80 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01110000101000111101100))
(define-fun _t_81 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_80))
(define-fun _t_82 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_78 _t_81))
(define-fun _t_84 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b00001100010010011011100))
(define-fun _t_85 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_84))
(define-fun _t_86 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_82 _t_85))
(define-fun _t_87 () Bool (fp.leq _t_64 _t_86))
(assert _t_87)
(define-fun _t_89 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b11100011010100111111100))
(define-fun _t_92 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b11101101000011100101011))
(define-fun _t_93 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_92))
(define-fun _t_94 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_93))
(define-fun _t_96 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00011110101110000101001))
(define-fun _t_97 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_96))
(define-fun _t_98 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_94 _t_97))
(define-fun _t_100 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b10010110000001000001100))
(define-fun _t_101 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_100))
(define-fun _t_102 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_98 _t_101))
(define-fun _t_104 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b11010011011101001011110))
(define-fun _t_105 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_104))
(define-fun _t_106 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_102 _t_105))
(define-fun _t_108 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b10010000011000100100110))
(define-fun _t_109 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_108))
(define-fun _t_110 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_106 _t_109))
(define-fun _t_111 () Bool (fp.leq _t_110 _t_89))
(assert _t_111)
(define-fun _t_113 () (_ FloatingPoint 8 24) (fp #b0 #b01111010 #b11011011001000101101000))
(define-fun _t_115 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00001101010011111110000))
(define-fun _t_116 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_115))
(define-fun _t_117 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_116))
(define-fun _t_119 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b00011000100100110111001))
(define-fun _t_120 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_119))
(define-fun _t_121 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_117 _t_120))
(define-fun _t_124 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b00011100101011000000011))
(define-fun _t_125 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_124))
(define-fun _t_126 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_121 _t_125))
(define-fun _t_128 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b10010011011101001011110))
(define-fun _t_129 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_128))
(define-fun _t_130 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_126 _t_129))
(define-fun _t_132 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01110110110010001011001))
(define-fun _t_133 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_132))
(define-fun _t_134 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_130 _t_133))
(define-fun _t_135 () Bool (fp.leq _t_134 _t_113))
(assert _t_135)
(define-fun _t_136 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b11101101000011100101011))
(define-fun _t_139 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b01100100010110100001101))
(define-fun _t_140 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_139))
(define-fun _t_141 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_140))
(define-fun _t_143 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b11101000011100101011000))
(define-fun _t_144 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_143))
(define-fun _t_145 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_141 _t_144))
(define-fun _t_147 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00111101111100111011011))
(define-fun _t_148 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_147))
(define-fun _t_149 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_145 _t_148))
(define-fun _t_151 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b11010010111100011010101))
(define-fun _t_152 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_151))
(define-fun _t_153 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_149 _t_152))
(define-fun _t_155 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b01110111110011101101100))
(define-fun _t_156 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_155))
(define-fun _t_157 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_153 _t_156))
(define-fun _t_158 () Bool (fp.leq _t_157 _t_136))
(assert _t_158)
(check-sat)
