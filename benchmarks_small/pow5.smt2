(set-logic QF_FP)
(set-info :smt-lib-version 2.0)
(set-info :category "crafted")
(set-info :source |Alberto Griggio <griggio@fbk.eu>. These benchmarks were used for the evaluation in the following paper: L. Haller, A. Griggio, M. Brain, D. Kroening: Deciding floating-point logic with systematic abstraction. FMCAD 2012. Real-numbered literals have been automatically translated by MathSAT|)
(set-info :status unknown)
;; MathSAT API call trace
;; generated on 05/20/15 17:24:53

(declare-fun x () (_ FloatingPoint 11 53))
(declare-fun y () (_ FloatingPoint 11 53))
(define-fun _t_10 () (_ FloatingPoint 11 53) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000))
(define-fun _t_11 () (_ FloatingPoint 11 53) x)
(define-fun _t_12 () Bool (fp.leq _t_10 _t_11))
(assert _t_12)
(define-fun _t_14 () (_ FloatingPoint 11 53) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000))
(define-fun _t_15 () Bool (fp.leq _t_11 _t_14))
(assert _t_15)
(define-fun _t_3 () RoundingMode RNE)
(define-fun _t_16 () (_ FloatingPoint 11 53) y)
(define-fun _t_17 () (_ FloatingPoint 11 53) (fp.mul _t_3 _t_11 _t_11))
(define-fun _t_18 () (_ FloatingPoint 11 53) (fp.mul _t_3 _t_11 _t_17))
(define-fun _t_19 () (_ FloatingPoint 11 53) (fp.mul _t_3 _t_11 _t_18))
(define-fun _t_20 () (_ FloatingPoint 11 53) (fp.mul _t_3 _t_11 _t_19))
(define-fun _t_21 () Bool (fp.eq _t_16 _t_20))
(assert _t_21)
(define-fun _t_23 () (_ FloatingPoint 11 53) (fp #b0 #b10000001111 #b1000011010100000000000000000000000000000000000000000))
(define-fun _t_24 () Bool (fp.lt _t_23 _t_16))
(assert _t_24)
(check-sat)
