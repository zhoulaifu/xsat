(set-logic QF_FP)
(set-info :smt-lib-version 2.0)
(set-info :category "crafted")
(set-info :source |Alberto Griggio <griggio@fbk.eu>. These benchmarks were used for the evaluation in the following paper: L. Haller, A. Griggio, M. Brain, D. Kroening: Deciding floating-point logic with systematic abstraction. FMCAD 2012. Real-numbered literals have been automatically translated by MathSAT|)
(set-info :status unknown)
;; MathSAT API call trace
;; generated on 05/20/15 17:24:54

(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(define-fun _t_10 () (_ FloatingPoint 8 24) (fp #b0 #b10000001 #b01000000000000000000000))
(define-fun _t_12 () (_ FloatingPoint 8 24) (fp #b1 #b10000001 #b01000000000000000000000))
(define-fun _t_13 () (_ FloatingPoint 8 24) x0)
(define-fun _t_14 () Bool (fp.leq _t_12 _t_13))
(define-fun _t_15 () Bool (fp.leq _t_13 _t_10))
(define-fun _t_16 () Bool (and _t_14 _t_15))
(assert _t_16)
(define-fun _t_17 () (_ FloatingPoint 8 24) x1)
(define-fun _t_18 () Bool (fp.leq _t_12 _t_17))
(define-fun _t_19 () Bool (fp.leq _t_17 _t_10))
(define-fun _t_20 () Bool (and _t_18 _t_19))
(assert _t_20)
(define-fun _t_21 () (_ FloatingPoint 8 24) x2)
(define-fun _t_22 () Bool (fp.leq _t_12 _t_21))
(define-fun _t_23 () Bool (fp.leq _t_21 _t_10))
(define-fun _t_24 () Bool (and _t_22 _t_23))
(assert _t_24)
(define-fun _t_3 () RoundingMode RNE)
(define-fun _t_26 () (_ FloatingPoint 8 24) (fp #b0 #b00000000 #b00000000000000000000000))
(define-fun _t_29 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b10011101001011110001100))
(define-fun _t_32 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b10001011010000111001011))
(define-fun _t_33 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_32))
(define-fun _t_34 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_26 _t_33))
(define-fun _t_37 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b01010111100011010101000))
(define-fun _t_38 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_37))
(define-fun _t_39 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_38))
(define-fun _t_42 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00001100110011001100110))
(define-fun _t_43 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_42))
(define-fun _t_44 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_39 _t_43))
(define-fun _t_45 () Bool (fp.leq _t_44 _t_29))
(assert _t_45)
(define-fun _t_48 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b01110011101101100100011))
(define-fun _t_51 () (_ FloatingPoint 8 24) (fp #b1 #b01111011 #b00111111011111001110110))
(define-fun _t_52 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_51))
(define-fun _t_53 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_26 _t_52))
(define-fun _t_55 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b10101101000011100101010))
(define-fun _t_56 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_55))
(define-fun _t_57 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_53 _t_56))
(define-fun _t_60 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00100000010000011000100))
(define-fun _t_61 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_60))
(define-fun _t_62 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_57 _t_61))
(define-fun _t_63 () Bool (fp.leq _t_62 _t_48))
(assert _t_63)
(define-fun _t_65 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b01110000101000111101100))
(define-fun _t_67 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b01100100010110100001101))
(define-fun _t_68 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_67))
(define-fun _t_69 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_26 _t_68))
(define-fun _t_72 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b11101110100101111000110))
(define-fun _t_73 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_72))
(define-fun _t_74 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_69 _t_73))
(define-fun _t_77 () (_ FloatingPoint 8 24) (fp #b1 #b01111010 #b00101111000110101001111))
(define-fun _t_78 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_77))
(define-fun _t_79 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_74 _t_78))
(define-fun _t_80 () Bool (fp.leq _t_79 _t_65))
(assert _t_80)
(check-sat)
