(set-logic QF_FP)
(set-info :smt-lib-version 2.0)
(set-info :category "crafted")
(set-info :source |Alberto Griggio <griggio@fbk.eu>. These benchmarks were used for the evaluation in the following paper: L. Haller, A. Griggio, M. Brain, D. Kroening: Deciding floating-point logic with systematic abstraction. FMCAD 2012. Real-numbered literals have been automatically translated by MathSAT|)
(set-info :status unknown)
;; MathSAT API call trace
;; generated on 05/20/15 17:24:56

(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(define-fun _t_10 () (_ FloatingPoint 8 24) (fp #b0 #b01111111 #b00000000000000000000000))
(define-fun _t_12 () (_ FloatingPoint 8 24) (fp #b1 #b01111111 #b00000000000000000000000))
(define-fun _t_13 () (_ FloatingPoint 8 24) x0)
(define-fun _t_14 () Bool (fp.leq _t_12 _t_13))
(define-fun _t_15 () Bool (fp.leq _t_13 _t_10))
(define-fun _t_16 () Bool (and _t_14 _t_15))
(assert _t_16)
(define-fun _t_17 () (_ FloatingPoint 8 24) x1)
(define-fun _t_18 () Bool (fp.leq _t_12 _t_17))
(define-fun _t_19 () Bool (fp.leq _t_17 _t_10))
(define-fun _t_20 () Bool (and _t_18 _t_19))
(assert _t_20)
(define-fun _t_21 () (_ FloatingPoint 8 24) x2)
(define-fun _t_22 () Bool (fp.leq _t_12 _t_21))
(define-fun _t_23 () Bool (fp.leq _t_21 _t_10))
(define-fun _t_24 () Bool (and _t_22 _t_23))
(assert _t_24)
(define-fun _t_25 () (_ FloatingPoint 8 24) x3)
(define-fun _t_26 () Bool (fp.leq _t_12 _t_25))
(define-fun _t_27 () Bool (fp.leq _t_25 _t_10))
(define-fun _t_28 () Bool (and _t_26 _t_27))
(assert _t_28)
(define-fun _t_29 () (_ FloatingPoint 8 24) x4)
(define-fun _t_30 () Bool (fp.leq _t_12 _t_29))
(define-fun _t_31 () Bool (fp.leq _t_29 _t_10))
(define-fun _t_32 () Bool (and _t_30 _t_31))
(assert _t_32)
(define-fun _t_3 () RoundingMode RNE)
(define-fun _t_34 () (_ FloatingPoint 8 24) (fp #b0 #b00000000 #b00000000000000000000000))
(define-fun _t_36 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b10100101111000110101001))
(define-fun _t_39 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b01011111001110110110010))
(define-fun _t_40 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_39))
(define-fun _t_41 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_40))
(define-fun _t_43 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b10101001011110001101001))
(define-fun _t_44 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_43))
(define-fun _t_45 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_41 _t_44))
(define-fun _t_47 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b10001101010011111110000))
(define-fun _t_48 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_47))
(define-fun _t_49 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_45 _t_48))
(define-fun _t_51 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b01101010011111101111100))
(define-fun _t_52 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_51))
(define-fun _t_53 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_49 _t_52))
(define-fun _t_55 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00100110111010010111100))
(define-fun _t_56 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_55))
(define-fun _t_57 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_53 _t_56))
(define-fun _t_58 () Bool (fp.leq _t_57 _t_36))
(assert _t_58)
(define-fun _t_60 () (_ FloatingPoint 8 24) (fp #b0 #b01111011 #b10100101111000110101010))
(define-fun _t_63 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b10110000001000001100001))
(define-fun _t_64 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_63))
(define-fun _t_65 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_64))
(define-fun _t_67 () (_ FloatingPoint 8 24) (fp #b0 #b01111010 #b01101000011100101010111))
(define-fun _t_68 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_67))
(define-fun _t_69 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_65 _t_68))
(define-fun _t_72 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00001001001101110100110))
(define-fun _t_73 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_72))
(define-fun _t_74 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_69 _t_73))
(define-fun _t_77 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b10100101011000000100001))
(define-fun _t_78 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_77))
(define-fun _t_79 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_74 _t_78))
(define-fun _t_82 () (_ FloatingPoint 8 24) (fp #b1 #b01111100 #b01110110110010001011001))
(define-fun _t_83 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_82))
(define-fun _t_84 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_79 _t_83))
(define-fun _t_85 () Bool (fp.leq _t_60 _t_84))
(assert _t_85)
(define-fun _t_87 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00000101000111101011100))
(define-fun _t_89 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00011010100111111011110))
(define-fun _t_90 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_89))
(define-fun _t_91 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_90))
(define-fun _t_93 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b01000111101011100001001))
(define-fun _t_94 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_93))
(define-fun _t_95 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_91 _t_94))
(define-fun _t_97 () (_ FloatingPoint 8 24) (fp #b0 #b01111011 #b00000110001001001101110))
(define-fun _t_98 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_97))
(define-fun _t_99 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_95 _t_98))
(define-fun _t_102 () (_ FloatingPoint 8 24) (fp #b1 #b01111001 #b01101000011100101010111))
(define-fun _t_103 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_102))
(define-fun _t_104 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_99 _t_103))
(define-fun _t_106 () (_ FloatingPoint 8 24) (fp #b0 #b01111011 #b11000010100011110101101))
(define-fun _t_107 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_106))
(define-fun _t_108 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_104 _t_107))
(define-fun _t_109 () Bool (fp.leq _t_87 _t_108))
(assert _t_109)
(define-fun _t_111 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b10000001000001100010010))
(define-fun _t_114 () (_ FloatingPoint 8 24) (fp #b1 #b01111100 #b01101100100010110100001))
(define-fun _t_115 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_114))
(define-fun _t_116 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_115))
(define-fun _t_119 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b11111100011010100111110))
(define-fun _t_120 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_119))
(define-fun _t_121 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_116 _t_120))
(define-fun _t_124 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00111001010110000001000))
(define-fun _t_125 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_124))
(define-fun _t_126 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_121 _t_125))
(define-fun _t_128 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01001110010101100000001))
(define-fun _t_129 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_128))
(define-fun _t_130 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_126 _t_129))
(define-fun _t_133 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b10100111011011001000110))
(define-fun _t_134 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_133))
(define-fun _t_135 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_130 _t_134))
(define-fun _t_136 () Bool (fp.leq _t_135 _t_111))
(assert _t_136)
(define-fun _t_138 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b00100001110010101100000))
(define-fun _t_141 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b00001010001111010111000))
(define-fun _t_142 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_141))
(define-fun _t_143 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_142))
(define-fun _t_145 () (_ FloatingPoint 8 24) (fp #b0 #b01111011 #b10000001000001100010001))
(define-fun _t_146 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_145))
(define-fun _t_147 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_143 _t_146))
(define-fun _t_149 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b11010011111101111100110))
(define-fun _t_150 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_149))
(define-fun _t_151 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_147 _t_150))
(define-fun _t_154 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b10100000110001001001110))
(define-fun _t_155 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_154))
(define-fun _t_156 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_151 _t_155))
(define-fun _t_158 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01100100010110100001110))
(define-fun _t_159 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_158))
(define-fun _t_160 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_156 _t_159))
(define-fun _t_161 () Bool (fp.leq _t_138 _t_160))
(assert _t_161)
(check-sat)
