(set-logic QF_FP)
(set-info :smt-lib-version 2.0)
(set-info :category "crafted")
(set-info :source |Alberto Griggio <griggio@fbk.eu>. These benchmarks were used for the evaluation in the following paper: L. Haller, A. Griggio, M. Brain, D. Kroening: Deciding floating-point logic with systematic abstraction. FMCAD 2012. Real-numbered literals have been automatically translated by MathSAT|)
(set-info :status unknown)
;; MathSAT API call trace
;; generated on 05/20/15 17:24:56

(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(define-fun _t_10 () (_ FloatingPoint 8 24) (fp #b0 #b01111111 #b00000000000000000000000))
(define-fun _t_12 () (_ FloatingPoint 8 24) (fp #b1 #b01111111 #b00000000000000000000000))
(define-fun _t_13 () (_ FloatingPoint 8 24) x0)
(define-fun _t_14 () Bool (fp.leq _t_12 _t_13))
(define-fun _t_15 () Bool (fp.leq _t_13 _t_10))
(define-fun _t_16 () Bool (and _t_14 _t_15))
(assert _t_16)
(define-fun _t_17 () (_ FloatingPoint 8 24) x1)
(define-fun _t_18 () Bool (fp.leq _t_12 _t_17))
(define-fun _t_19 () Bool (fp.leq _t_17 _t_10))
(define-fun _t_20 () Bool (and _t_18 _t_19))
(assert _t_20)
(define-fun _t_21 () (_ FloatingPoint 8 24) x2)
(define-fun _t_22 () Bool (fp.leq _t_12 _t_21))
(define-fun _t_23 () Bool (fp.leq _t_21 _t_10))
(define-fun _t_24 () Bool (and _t_22 _t_23))
(assert _t_24)
(define-fun _t_25 () (_ FloatingPoint 8 24) x3)
(define-fun _t_26 () Bool (fp.leq _t_12 _t_25))
(define-fun _t_27 () Bool (fp.leq _t_25 _t_10))
(define-fun _t_28 () Bool (and _t_26 _t_27))
(assert _t_28)
(define-fun _t_29 () (_ FloatingPoint 8 24) x4)
(define-fun _t_30 () Bool (fp.leq _t_12 _t_29))
(define-fun _t_31 () Bool (fp.leq _t_29 _t_10))
(define-fun _t_32 () Bool (and _t_30 _t_31))
(assert _t_32)
(define-fun _t_3 () RoundingMode RNE)
(define-fun _t_34 () (_ FloatingPoint 8 24) (fp #b0 #b00000000 #b00000000000000000000000))
(define-fun _t_37 () (_ FloatingPoint 8 24) (fp #b1 #b01111100 #b00111101011100001010010))
(define-fun _t_40 () (_ FloatingPoint 8 24) (fp #b1 #b01111011 #b10100001110010101100000))
(define-fun _t_41 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_40))
(define-fun _t_42 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_41))
(define-fun _t_45 () (_ FloatingPoint 8 24) (fp #b1 #b01111100 #b10011001100110011001101))
(define-fun _t_46 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_45))
(define-fun _t_47 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_42 _t_46))
(define-fun _t_50 () (_ FloatingPoint 8 24) (fp #b1 #b01111100 #b11010010111100011010101))
(define-fun _t_51 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_50))
(define-fun _t_52 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_47 _t_51))
(define-fun _t_54 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b00001001001101110100110))
(define-fun _t_55 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_54))
(define-fun _t_56 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_52 _t_55))
(define-fun _t_58 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b10000010100011110101110))
(define-fun _t_59 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_58))
(define-fun _t_60 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_56 _t_59))
(define-fun _t_61 () Bool (fp.leq _t_37 _t_60))
(assert _t_61)
(define-fun _t_63 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01111100011010100111110))
(define-fun _t_65 () (_ FloatingPoint 8 24) (fp #b0 #b01110111 #b11001010110000001000001))
(define-fun _t_66 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_65))
(define-fun _t_67 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_66))
(define-fun _t_70 () (_ FloatingPoint 8 24) (fp #b1 #b01111100 #b01010110000001000001100))
(define-fun _t_71 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_70))
(define-fun _t_72 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_67 _t_71))
(define-fun _t_75 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b01010010011011101001100))
(define-fun _t_76 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_75))
(define-fun _t_77 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_72 _t_76))
(define-fun _t_80 () (_ FloatingPoint 8 24) (fp #b1 #b01111100 #b00000010000011000100100))
(define-fun _t_81 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_80))
(define-fun _t_82 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_77 _t_81))
(define-fun _t_85 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00101011100001010001110))
(define-fun _t_86 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_85))
(define-fun _t_87 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_82 _t_86))
(define-fun _t_88 () Bool (fp.leq _t_63 _t_87))
(assert _t_88)
(define-fun _t_90 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b11001010001111010111000))
(define-fun _t_92 () (_ FloatingPoint 8 24) (fp #b0 #b01111011 #b11000110101001111110111))
(define-fun _t_93 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_92))
(define-fun _t_94 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_93))
(define-fun _t_97 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b11111000110101001111111))
(define-fun _t_98 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_97))
(define-fun _t_99 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_94 _t_98))
(define-fun _t_102 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b10111011011001000101100))
(define-fun _t_103 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_102))
(define-fun _t_104 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_99 _t_103))
(define-fun _t_106 () (_ FloatingPoint 8 24) (fp #b0 #b01111011 #b01100000010000011000100))
(define-fun _t_107 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_106))
(define-fun _t_108 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_104 _t_107))
(define-fun _t_111 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b01010100011110101110001))
(define-fun _t_112 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_111))
(define-fun _t_113 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_108 _t_112))
(define-fun _t_114 () Bool (fp.leq _t_113 _t_90))
(assert _t_114)
(define-fun _t_116 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01001100110011001100110))
(define-fun _t_118 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b10111101011100001010010))
(define-fun _t_119 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_118))
(define-fun _t_120 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_119))
(define-fun _t_123 () (_ FloatingPoint 8 24) (fp #b1 #b01111011 #b00010110100001110010101))
(define-fun _t_124 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_123))
(define-fun _t_125 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_120 _t_124))
(define-fun _t_128 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b01011101001011110001100))
(define-fun _t_129 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_128))
(define-fun _t_130 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_125 _t_129))
(define-fun _t_131 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_40))
(define-fun _t_132 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_130 _t_131))
(define-fun _t_135 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b11110001101010011111110))
(define-fun _t_136 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_135))
(define-fun _t_137 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_132 _t_136))
(define-fun _t_138 () Bool (fp.leq _t_116 _t_137))
(assert _t_138)
(define-fun _t_140 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b01100010010011011101001))
(define-fun _t_143 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b01000000000000000000000))
(define-fun _t_144 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_143))
(define-fun _t_145 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_144))
(define-fun _t_147 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00000001000001100010001))
(define-fun _t_148 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_147))
(define-fun _t_149 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_145 _t_148))
(define-fun _t_152 () (_ FloatingPoint 8 24) (fp #b1 #b01111001 #b01000111101011100001010))
(define-fun _t_153 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_152))
(define-fun _t_154 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_149 _t_153))
(define-fun _t_157 () (_ FloatingPoint 8 24) (fp #b1 #b01111010 #b00000110001001001101111))
(define-fun _t_158 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_157))
(define-fun _t_159 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_154 _t_158))
(define-fun _t_162 () (_ FloatingPoint 8 24) (fp #b1 #b01111011 #b00000010000011000100100))
(define-fun _t_163 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_162))
(define-fun _t_164 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_159 _t_163))
(define-fun _t_165 () Bool (fp.leq _t_140 _t_164))
(assert _t_165)
(check-sat)
