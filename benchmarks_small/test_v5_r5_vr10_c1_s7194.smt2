(set-logic QF_FP)
(set-info :smt-lib-version 2.0)
(set-info :category "crafted")
(set-info :source |Alberto Griggio <griggio@fbk.eu>. These benchmarks were used for the evaluation in the following paper: L. Haller, A. Griggio, M. Brain, D. Kroening: Deciding floating-point logic with systematic abstraction. FMCAD 2012. Real-numbered literals have been automatically translated by MathSAT|)
(set-info :status unknown)
;; MathSAT API call trace
;; generated on 05/20/15 17:24:56

(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(define-fun _t_10 () (_ FloatingPoint 8 24) (fp #b0 #b10000010 #b01000000000000000000000))
(define-fun _t_12 () (_ FloatingPoint 8 24) (fp #b1 #b10000010 #b01000000000000000000000))
(define-fun _t_13 () (_ FloatingPoint 8 24) x0)
(define-fun _t_14 () Bool (fp.leq _t_12 _t_13))
(define-fun _t_15 () Bool (fp.leq _t_13 _t_10))
(define-fun _t_16 () Bool (and _t_14 _t_15))
(assert _t_16)
(define-fun _t_17 () (_ FloatingPoint 8 24) x1)
(define-fun _t_18 () Bool (fp.leq _t_12 _t_17))
(define-fun _t_19 () Bool (fp.leq _t_17 _t_10))
(define-fun _t_20 () Bool (and _t_18 _t_19))
(assert _t_20)
(define-fun _t_21 () (_ FloatingPoint 8 24) x2)
(define-fun _t_22 () Bool (fp.leq _t_12 _t_21))
(define-fun _t_23 () Bool (fp.leq _t_21 _t_10))
(define-fun _t_24 () Bool (and _t_22 _t_23))
(assert _t_24)
(define-fun _t_25 () (_ FloatingPoint 8 24) x3)
(define-fun _t_26 () Bool (fp.leq _t_12 _t_25))
(define-fun _t_27 () Bool (fp.leq _t_25 _t_10))
(define-fun _t_28 () Bool (and _t_26 _t_27))
(assert _t_28)
(define-fun _t_29 () (_ FloatingPoint 8 24) x4)
(define-fun _t_30 () Bool (fp.leq _t_12 _t_29))
(define-fun _t_31 () Bool (fp.leq _t_29 _t_10))
(define-fun _t_32 () Bool (and _t_30 _t_31))
(assert _t_32)
(define-fun _t_3 () RoundingMode RNE)
(define-fun _t_34 () (_ FloatingPoint 8 24) (fp #b0 #b00000000 #b00000000000000000000000))
(define-fun _t_36 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b11000000100000110001001))
(define-fun _t_39 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b10111000010100011110110))
(define-fun _t_40 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_39))
(define-fun _t_41 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_40))
(define-fun _t_43 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b01010110000001000001100))
(define-fun _t_44 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_43))
(define-fun _t_45 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_41 _t_44))
(define-fun _t_47 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b11100110111010010111100))
(define-fun _t_48 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_47))
(define-fun _t_49 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_45 _t_48))
(define-fun _t_51 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b11011000000100000110000))
(define-fun _t_52 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_51))
(define-fun _t_53 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_49 _t_52))
(define-fun _t_56 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b00100010110100001110011))
(define-fun _t_57 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_56))
(define-fun _t_58 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_53 _t_57))
(define-fun _t_59 () Bool (fp.leq _t_58 _t_36))
(assert _t_59)
(define-fun _t_61 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b10011011101001011110010))
(define-fun _t_64 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b01011010000111001010110))
(define-fun _t_65 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_64))
(define-fun _t_66 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_65))
(define-fun _t_68 () (_ FloatingPoint 8 24) (fp #b0 #b01111011 #b00010010011011101001011))
(define-fun _t_69 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_68))
(define-fun _t_70 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_66 _t_69))
(define-fun _t_72 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b00011110101110000101001))
(define-fun _t_73 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_72))
(define-fun _t_74 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_70 _t_73))
(define-fun _t_76 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01110010101100000010000))
(define-fun _t_77 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_76))
(define-fun _t_78 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_74 _t_77))
(define-fun _t_80 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01010001111010111000011))
(define-fun _t_81 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_80))
(define-fun _t_82 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_78 _t_81))
(define-fun _t_83 () Bool (fp.leq _t_61 _t_82))
(assert _t_83)
(define-fun _t_85 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00100111111011111001110))
(define-fun _t_87 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01110000101000111101100))
(define-fun _t_88 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_87))
(define-fun _t_89 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_88))
(define-fun _t_92 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b01010000111001010110000))
(define-fun _t_93 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_92))
(define-fun _t_94 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_89 _t_93))
(define-fun _t_96 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00110100101111000110100))
(define-fun _t_97 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_96))
(define-fun _t_98 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_94 _t_97))
(define-fun _t_101 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00110111010010111100011))
(define-fun _t_102 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_101))
(define-fun _t_103 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_98 _t_102))
(define-fun _t_105 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b10000111101011100001001))
(define-fun _t_106 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_105))
(define-fun _t_107 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_103 _t_106))
(define-fun _t_108 () Bool (fp.leq _t_107 _t_85))
(assert _t_108)
(define-fun _t_110 () (_ FloatingPoint 8 24) (fp #b0 #b01111100 #b11100001010001111010110))
(define-fun _t_113 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b00000100000110001001001))
(define-fun _t_114 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_113))
(define-fun _t_115 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_114))
(define-fun _t_117 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b10100100110111010011000))
(define-fun _t_118 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_117))
(define-fun _t_119 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_115 _t_118))
(define-fun _t_121 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01101000011100101011000))
(define-fun _t_122 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_121))
(define-fun _t_123 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_119 _t_122))
(define-fun _t_126 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00110101001111110111110))
(define-fun _t_127 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_126))
(define-fun _t_128 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_123 _t_127))
(define-fun _t_131 () (_ FloatingPoint 8 24) (fp #b1 #b01111100 #b11111001110110110010000))
(define-fun _t_132 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_131))
(define-fun _t_133 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_128 _t_132))
(define-fun _t_134 () Bool (fp.leq _t_110 _t_133))
(assert _t_134)
(define-fun _t_136 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00000010000011000100100))
(define-fun _t_139 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b01101001011110001101001))
(define-fun _t_140 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_139))
(define-fun _t_141 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_140))
(define-fun _t_144 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b01010100111111011111001))
(define-fun _t_145 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_144))
(define-fun _t_146 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_141 _t_145))
(define-fun _t_148 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b10000010000011000100101))
(define-fun _t_149 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_148))
(define-fun _t_150 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_146 _t_149))
(define-fun _t_152 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b11010010111100011010101))
(define-fun _t_153 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_152))
(define-fun _t_154 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_150 _t_153))
(define-fun _t_156 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00010011011101001011110))
(define-fun _t_157 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_156))
(define-fun _t_158 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_154 _t_157))
(define-fun _t_159 () Bool (fp.leq _t_136 _t_158))
(assert _t_159)
(check-sat)
