(set-logic QF_FP)
(set-info :smt-lib-version 2.0)
(set-info :category "crafted")
(set-info :source |Alberto Griggio <griggio@fbk.eu>. These benchmarks were used for the evaluation in the following paper: L. Haller, A. Griggio, M. Brain, D. Kroening: Deciding floating-point logic with systematic abstraction. FMCAD 2012. Real-numbered literals have been automatically translated by MathSAT|)
(set-info :status unknown)
;; MathSAT API call trace
;; generated on 05/20/15 17:24:56

(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(define-fun _t_10 () (_ FloatingPoint 8 24) (fp #b0 #b01111111 #b00000000000000000000000))
(define-fun _t_12 () (_ FloatingPoint 8 24) (fp #b1 #b01111111 #b00000000000000000000000))
(define-fun _t_13 () (_ FloatingPoint 8 24) x0)
(define-fun _t_14 () Bool (fp.leq _t_12 _t_13))
(define-fun _t_15 () Bool (fp.leq _t_13 _t_10))
(define-fun _t_16 () Bool (and _t_14 _t_15))
(assert _t_16)
(define-fun _t_17 () (_ FloatingPoint 8 24) x1)
(define-fun _t_18 () Bool (fp.leq _t_12 _t_17))
(define-fun _t_19 () Bool (fp.leq _t_17 _t_10))
(define-fun _t_20 () Bool (and _t_18 _t_19))
(assert _t_20)
(define-fun _t_21 () (_ FloatingPoint 8 24) x2)
(define-fun _t_22 () Bool (fp.leq _t_12 _t_21))
(define-fun _t_23 () Bool (fp.leq _t_21 _t_10))
(define-fun _t_24 () Bool (and _t_22 _t_23))
(assert _t_24)
(define-fun _t_25 () (_ FloatingPoint 8 24) x3)
(define-fun _t_26 () Bool (fp.leq _t_12 _t_25))
(define-fun _t_27 () Bool (fp.leq _t_25 _t_10))
(define-fun _t_28 () Bool (and _t_26 _t_27))
(assert _t_28)
(define-fun _t_29 () (_ FloatingPoint 8 24) x4)
(define-fun _t_30 () Bool (fp.leq _t_12 _t_29))
(define-fun _t_31 () Bool (fp.leq _t_29 _t_10))
(define-fun _t_32 () Bool (and _t_30 _t_31))
(assert _t_32)
(define-fun _t_3 () RoundingMode RNE)
(define-fun _t_34 () (_ FloatingPoint 8 24) (fp #b0 #b00000000 #b00000000000000000000000))
(define-fun _t_36 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00110000101000111101100))
(define-fun _t_39 () (_ FloatingPoint 8 24) (fp #b1 #b01111010 #b01100000010000011000101))
(define-fun _t_40 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_39))
(define-fun _t_41 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_40))
(define-fun _t_43 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b00000111001010110000001))
(define-fun _t_44 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_43))
(define-fun _t_45 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_41 _t_44))
(define-fun _t_48 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00110011101101100100011))
(define-fun _t_49 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_48))
(define-fun _t_50 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_45 _t_49))
(define-fun _t_53 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b11010111000010100011111))
(define-fun _t_54 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_53))
(define-fun _t_55 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_50 _t_54))
(define-fun _t_58 () (_ FloatingPoint 8 24) (fp #b1 #b01111010 #b11101011100001010001110))
(define-fun _t_59 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_58))
(define-fun _t_60 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_55 _t_59))
(define-fun _t_61 () Bool (fp.leq _t_60 _t_36))
(assert _t_61)
(define-fun _t_64 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b01110100101111000110101))
(define-fun _t_66 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01011010000111001010110))
(define-fun _t_67 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_66))
(define-fun _t_68 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_67))
(define-fun _t_70 () (_ FloatingPoint 8 24) (fp #b0 #b01111011 #b10010001011010000111000))
(define-fun _t_71 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_70))
(define-fun _t_72 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_68 _t_71))
(define-fun _t_75 () (_ FloatingPoint 8 24) (fp #b1 #b01111011 #b01111000110101001111111))
(define-fun _t_76 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_75))
(define-fun _t_77 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_72 _t_76))
(define-fun _t_79 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01111101011100001010001))
(define-fun _t_80 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_79))
(define-fun _t_81 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_77 _t_80))
(define-fun _t_83 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b00011001100110011001100))
(define-fun _t_84 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_83))
(define-fun _t_85 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_81 _t_84))
(define-fun _t_86 () Bool (fp.leq _t_85 _t_64))
(assert _t_86)
(define-fun _t_89 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b01101000111101011100001))
(define-fun _t_91 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b00100100110111010011000))
(define-fun _t_92 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_91))
(define-fun _t_93 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_92))
(define-fun _t_95 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b01011010100111111011110))
(define-fun _t_96 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_95))
(define-fun _t_97 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_93 _t_96))
(define-fun _t_100 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b00001110110110010001011))
(define-fun _t_101 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_100))
(define-fun _t_102 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_97 _t_101))
(define-fun _t_105 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b11011110001101010100000))
(define-fun _t_106 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_105))
(define-fun _t_107 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_102 _t_106))
(define-fun _t_109 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b11101100100010110100010))
(define-fun _t_110 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_109))
(define-fun _t_111 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_107 _t_110))
(define-fun _t_112 () Bool (fp.leq _t_89 _t_111))
(assert _t_112)
(define-fun _t_114 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b10011001100110011001100))
(define-fun _t_116 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b11110000101000111101100))
(define-fun _t_117 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_116))
(define-fun _t_118 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_117))
(define-fun _t_120 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b11000000100000110001001))
(define-fun _t_121 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_120))
(define-fun _t_122 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_118 _t_121))
(define-fun _t_125 () (_ FloatingPoint 8 24) (fp #b1 #b01111110 #b11101010011111101111100))
(define-fun _t_126 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_125))
(define-fun _t_127 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_122 _t_126))
(define-fun _t_130 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b00111001010110000001000))
(define-fun _t_131 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_130))
(define-fun _t_132 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_127 _t_131))
(define-fun _t_134 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b10010110000001000001100))
(define-fun _t_135 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_134))
(define-fun _t_136 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_132 _t_135))
(define-fun _t_137 () Bool (fp.leq _t_114 _t_136))
(assert _t_137)
(define-fun _t_139 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b11000110101001111111000))
(define-fun _t_141 () (_ FloatingPoint 8 24) (fp #b0 #b01111101 #b11111011111001110110110))
(define-fun _t_142 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_13 _t_141))
(define-fun _t_143 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_34 _t_142))
(define-fun _t_146 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b10010100011110101110000))
(define-fun _t_147 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_17 _t_146))
(define-fun _t_148 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_143 _t_147))
(define-fun _t_151 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b10110101001111110111101))
(define-fun _t_152 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_21 _t_151))
(define-fun _t_153 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_148 _t_152))
(define-fun _t_155 () (_ FloatingPoint 8 24) (fp #b0 #b01111110 #b10000101000111101011100))
(define-fun _t_156 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_25 _t_155))
(define-fun _t_157 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_153 _t_156))
(define-fun _t_160 () (_ FloatingPoint 8 24) (fp #b1 #b01111101 #b11011011001000101101000))
(define-fun _t_161 () (_ FloatingPoint 8 24) (fp.mul _t_3 _t_29 _t_160))
(define-fun _t_162 () (_ FloatingPoint 8 24) (fp.add _t_3 _t_157 _t_161))
(define-fun _t_163 () Bool (fp.leq _t_162 _t_139))
(assert _t_163)
(check-sat)
